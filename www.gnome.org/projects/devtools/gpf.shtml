<!--#set var="title" value="GNOME Devtools - GPF" -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
  "http://www.w3.org/TR/REC-html40/loose.dtd">
<html>
<head>
<title><!--#echo var="title" --></title>
<link rel="stylesheet" href="go.css" type="text/css">
</head>
<body bgcolor="#FFFFFF">

<table border="0" cellpadding="0" cellspacing="0" width="100%">
  <tr>
   
<td align="left" style="background: #ffffff" width="100%" height=135 colspan=2 valign="bottom">
<img src="images/devtools-header4.png" alt="Logo Banner" border="0"></img>
      &nbsp;
    </td>

  </tr>

<!--#include virtual="head.shtml" -->

 <td valign="top">
      <p><h1>GNOME Devtools - GPF</h1></p>

     The program analysis framework will provide components with a syntactic and semantic representation of the source code used in the project. This will provide the basis for such components as class browsers, syntax highlighters, and smart editors that help the user along as they write code. To summarise, it's sort of half a compiler (the half that does
everything but generate actual code) which holds its state permanently in
memory while you're editing code so that every update you makes
incrementally updates the state of gpf.
</P><P>
The beauty of it is that it's state can be used by the editor and all the
programs that comprise an IDE for things ranging font highlighting to class
generation to real-time syntax checking. It could even be used to automate
the entire process of constructing programs. 
<P>
The work was inspired by (and is basically just an implementation of) this

<A HREF="http://sunsite.berkeley.edu/Dienst/UI/2.0/Describe/ncstrl.ucb/CSD-97-946?abstract=">paper</A>.
<!--#include virtual="foot.shtml"-->