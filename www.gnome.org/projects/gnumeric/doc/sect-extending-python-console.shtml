<html xmlns:set="http://exslt.org/sets">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>The Python Console</title>
<link rel="previous" href="sect-extending-python-install.shtml" title="Installing and Building Gnumeric for Python">
<link rel="next" href="sect-extending-python-builtins.shtml" title="Using the built-in Python functions">
<link rel="top" href="gnumeric.shtml" title="The Gnumeric Manual, version 1.8">
<link rel="stylesheet" type="text/css" href="gnumeric-doc.css">
</head>
<body>
<div class="navbar navbar-top"><table class="navbar"><tr>
<td class="navbar-prev"><a class="navbar-prev" href="sect-extending-python-install.shtml" title="Installing and Building Gnumeric for Python">Installing and Building Gnumeric for Python</a></td>
<td class="navbar-next"><a class="navbar-next" href="sect-extending-python-builtins.shtml" title="Using the built-in Python functions">Using the built-in Python functions</a></td>
</tr></table></div>
<div class="sidebar"><div class="sidenav"><div class="autotoc"><ul>
<li><a href="gnumeric-info.shtml" title="About This Document">About This Document</a></li>
<li>
<a class="xref" href="gnumeric.shtml" title="The Gnumeric Manual, version 1.8">The Gnumeric Manual, version 1.8</a><div class="autotoc"><ul>
<li><a class="xref" href="chapter-welcome.shtml" title="Welcome!">Welcome!</a></li>
<li><a class="xref" href="chapter-manual-usage.shtml" title="How to Use this Manual">How to Use this Manual</a></li>
<li><a class="xref" href="chapter-quick-start.shtml" title="A Quick Introduction">A Quick Introduction</a></li>
<li><a class="xref" href="chapter-gui-elements.shtml" title="Gnumeric Elements">Gnumeric Elements</a></li>
<li><a class="xref" href="chapter-data.shtml" title="Working with Data">Working with Data</a></li>
<li><a class="xref" href="chapter-advanced-analysis.shtml" title="Advanced Analysis">Advanced Analysis</a></li>
<li><a class="xref" href="chapter-graphics.shtml" title="Graphics: Plots, Images, Widgets, and Drawings">Graphics: Plots, Images, Widgets, and Drawings</a></li>
<li><a class="xref" href="chapter-configuring.shtml" title="Configuring Gnumeric">Configuring Gnumeric</a></li>
<li><a class="xref" href="chapter-files.shtml" title="Working with Files">Working with Files</a></li>
<li><a class="xref" href="chapter-printing.shtml" title="Printing">Printing</a></li>
<li><a class="xref" href="chapter-morehelp.shtml" title="Getting More Help">Getting More Help</a></li>
<li><a class="xref" href="chapter-bugs.shtml" title="Reporting a Problem">Reporting a Problem</a></li>
<li>
<a class="xref" href="chapter-extending.shtml" title="Extending Gnumeric">Extending Gnumeric</a><div class="autotoc"><ul>
<li><a class="xref" href="sect-extending-overview.shtml" title="The Approaches to Extending Gnumeric">The Approaches to Extending Gnumeric</a></li>
<li><a class="xref" href="sect-extending-functions.shtml" title="Defining New Functions">Defining New Functions</a></li>
<li>
<a class="xref" href="sect-extending-python.shtml" title="Programming Gnumeric using Python">Programming Gnumeric using Python</a><div class="autotoc"><ul>
<li><a class="xref" href="sect-extending-python-install.shtml" title="Installing and Building Gnumeric for Python">Installing and Building Gnumeric for Python</a></li>
<li>The Python Console</li>
<li><a class="xref" href="sect-extending-python-builtins.shtml" title="Using the built-in Python functions">Using the built-in Python functions</a></li>
<li><a class="xref" href="sect-extending-python-writing.shtml" title="Writing your own Python functions">Writing your own Python functions</a></li>
<li><a class="xref" href="extending-python-upgrading.shtml" title="Upgrading">Upgrading</a></li>
<li><a class="xref" href="sect-extending-python-fancy.shtml" title="Fancy tricks">Fancy tricks</a></li>
<li><a class="xref" href="sect-extending-python-questions.shtml" title="Features wanted, and Questions">Features wanted, and Questions</a></li>
</ul></div>
</li>
<li><a class="xref" href="sect-extending-plugins.shtml" title="Writing New Plugins">Writing New Plugins</a></li>
</ul></div>
</li>
<li><a class="xref" href="function-reference.shtml" title="Function Reference">Function Reference</a></li>
<li><a class="xref" href="keybinding.shtml" title="Keybinding Reference">Keybinding Reference</a></li>
</ul></div>
</li>
</ul></div></div></div>
<div class="body body-sidebar"><div class="division sect2">
<a name="sect-extending-python-console"></a><div class="header"><h1 class="sect2 title"><span class="title">The Python Console</span></h1></div>
<ul class="linktrail">
<li class="linktrail linktrail-first"><a class="linktrail" href="gnumeric.shtml" title="The Gnumeric Manual, version 1.8">The Gnumeric Manual, version 1.8</a></li>
<li class="linktrail"><a class="linktrail" href="chapter-extending.shtml" title="Extending Gnumeric">Extending Gnumeric</a></li>
<li class="linktrail linktrail-last"><a class="linktrail" href="sect-extending-python.shtml" title="Programming Gnumeric using Python">Programming Gnumeric using Python</a></li>
</ul>
<p class="para block block-first">
      There is an interactive Python console available from inside
      Gnumeric. This is a good place to explore things, and if the
      console is expanded, will be a nice place for scripting. In the
      meantime, what I have called "Spellbooks" below are much more
      useful, but are fixed plugins as of Gnumeric startup. So right
      now I putter in the console as I develop plugin literal in the
      form of spellbooks. After 1.2.0, Gnumeric will be working on its
      scripting API, so the two approaches may merge. Or not.
    </p>
<div class="autotoc"><ul>
<li>
<span class="label">13.3.2.1. </span><a class="xref" href="sect-extending-python-console.shtml#sect-extending-python-console-enabling" title="Enabling the Python Console">Enabling the Python Console</a>
</li>
<li>
<span class="label">13.3.2.2. </span><a class="xref" href="sect-extending-python-console.shtml#sect-extending-python-console-playing" title="Playing with the Python console">Playing with the Python console</a>
</li>
<li>
<span class="label">13.3.2.3. </span><a class="xref" href="sect-extending-python-console.shtml#sect-extending-python-console-morefun" title="More fun with the Python console">More fun with the Python console</a>
</li>
</ul></div>
<div class="division sect3">
<a name="sect-extending-python-console-enabling"></a><div class="header"><h2 class="sect3 title"><span class="title"><span class="label">13.3.2.1. </span>Enabling the Python Console</span></h2></div>
<p class="para block block-first">
        You can run a Python interpreter from inside Gnumeric, but you
        have to turn it on. To do this you simply uncomment a line in
        python-loader/plugins.xml. Normally, that file lives in
        /usr/lib/gnumeric/<span class="emphasis">$version</span>/plugins/python-loader/,
        or perhaps <span class="emphasis">/usr/local/lib...</span> on Red Hat.
        I used to suggest making a local but you should probably make
        a local copy, but that was pain for little gain. So:
      </p>
<div class="block list procedure"><ol class="procedure">
<li class="li-first">
            <p class="para block block-first">
              <span class="literal">gnumeric --version</span> to make sure you
              get the right version name for the following. (You'll
              have to do this for every new version of Gnumeric!).
            </p>
          </li>
<li>
            <p class="para block block-first">
              <span class="literal">cd ~/.gnumeric/</span>
                <span class="emphasis">$version</span>
                 <span class="literal">/plugins/</span>
            </p>
          </li>
<li>
            <p class="para block block-first">
              Edit <span class="literal">python-loader/plugin.xml</span>.
            </p>
          </li>
<li>
           <p class="para block block-first">
               Uncomment the five lines starting with
               <span class="literal">ui-console-menu service</span> near the
               bottom (remove the "&lt;!--" and "--&gt;" tags around
               the &lt;service...&gt; and &lt;/service&gt; tags.
            </p>
          </li>
<li>
            <p class="para block block-first">
              Save the file.
            </p>
          </li>
<li>
            <p class="para block block-first">
              Start gnumeric (same version).
            </p>
          </li>
<li>
            <p class="para block block-first">
              Select from the <span class="guimenu">Tools</span> the <span class="guimenuitem">Python
              console</span>.
            </p>
          </li>
<li>
            <p class="para block block-first">
              <span class="emphasis">Enjoy!</span>
            </p>
          </li>
</ol></div>
</div>
<div class="division sect3">
<a name="sect-extending-python-console-playing"></a><div class="header"><h2 class="sect3 title"><span class="title"><span class="label">13.3.2.2. </span>Playing with the Python console</span></h2></div>
<p class="para block block-first">
        At the top there is a drop-down menu <span class="guimenu">Execute
        in</span>. Right now your only choice will be
        <span class="guimenuitem">Default</span>. After you evaluate functions
        from other plugins, those environments will become available
        too (JK says this is called lazy loading). But I'll assume you
        are using Default. (The only real difference is that you have
        to import Gnumeric first, and you can't see your plugin
        functions.)
      </p>
<p class="para block">
        (Note: older releases required you to type <span class="literal">print
        dir()</span> instead of just
        <span class="literal">dir()</span>. Fixed in cvs 16 June 2003, and
        certainly in 1.1.20 and higher.
      </p>
<p class="para block">
        Let's start by taking a look at the environment.
      </p>
<div class=" block programlisting block-indent"><pre class="programlisting">&gt;&gt;&gt; import <span class="co">1</span>Gnumeric
&gt;&gt;&gt; dir()
['Gnumeric', '__builtins__', '__doc__', '__name__']
&gt;&gt;&gt; dir(Gnumeric)
['Boolean', 'CellPos', 'FALSE', 'GnumericError', 'GnumericErrorDIV0',
'GnumericErrorNA', 'GnumericErrorNAME', 'GnumericErrorNULL',
'GnumericErrorNUM', 'GnumericErrorRECALC', 'GnumericErrorREF',
'GnumericErrorVALUE', 'MStyle', 'Range', 'TRUE', '__doc__',
'__name__', <span class="co">2</span>'functions', 'plugin_info', 'workbook_new', 'workbooks'] 

      </pre></div>
      
        <p class="para block block-first">
          'Gnumeric' is a module that exists only within Gnumeric, and
          which defines the Gnumeric Python API.
        </p>
      

      
        <p class="para block block-first">
          Gnumeric.functions is the list of all the Gnumeric functions
          you would see in the function browser. You cannot yet do
          <span class="literal">dir(Gnumeric.functions)</span> but maybe someone
          will bind that soon.
        </p>

        <p class="para block">
          RangeRef is not listed. That seems to limit us, though later
          in the tutorial we'll see how to use regular functions to
          get inside RangeRefs.
        </p>

      
      <p class="para block">
        So do some exploring. First, let's poke around to figure out
        how to use CellPos.
      </p>
<div class=" block programlisting block-indent"><pre class="programlisting"># I wonder how to use CellPos (I've glanced at the source, but...)

&gt;&gt;&gt; dir(Gnumeric.CellPos)                 # shows nothing useful

&gt;&gt;&gt; Gnumeric.CellPos()                    
TypeError: CellPos() takes exactly 2 arguments (0 given)  

&gt;&gt;&gt; Gnumeric.CellPos("a1","a2") 
TypeError: an integer is required.        # Right. 

&gt;&gt;&gt; a=Gnumeric.CellPos(1,2)               # It worked!
&gt;&gt;&gt; a
&lt;CellPos object at 0x106b6eb8&gt;      # Yeah, I know...

&gt;&gt;&gt; dir(a)
['get_tuple']

&gt;&gt;&gt; a.get_tuple()
(1,2)                                     # Cool. That's (col,row)

&gt;&gt;&gt; str(a)                                # Super cool.
'B3'                                      # JK hasn't implemented this for tuples yet
       </pre></div>
<p class="para block">
         Similarly, we can explore Gnumeric.Range:
       </p>
<div class=" block programlisting block-indent"><pre class="programlisting">&gt;&gt;&gt; r = Gnumeric.Range((1,2),(3,4))
TypeError: Range() argument 1 must be CellPos, not tuple

&gt;&gt;&gt; r = Gnumeric.Range(a,a)
&gt;&gt;&gt; r
&lt;Range object at 0x1071d888&gt;

&gt;&gt;&gt; dir(r)
['get_tuple']

&gt;&gt;&gt; r.get_tuple()
(3, 7, 3, 7)
	  </pre></div>
<p class="para block">If you
		evaluate in the context of a plugin (rather than in Default), then
		<span class="literal">dir(Gnumeric.plugin_info)</span> will reveal some simple
		informational functions you can call for the local plugin(s).</p>
<p class="para block">Note: obviously I don't really know what I'm doing, or I wouldn't
		be poking around like this.</p>
</div>
<div class="division sect3">
<a name="sect-extending-python-console-morefun"></a><div class="header"><h2 class="sect3 title"><span class="title"><span class="label">13.3.2.3. </span>More fun with the Python console</span></h2></div>
<p class="para block block-first">Jon K. Hellan writes, "Here are some more things you can do
	  from the console:"</p>
<div class=" block programlisting block-indent"><pre class="programlisting"># Get a workbook
&gt;&gt;&gt; wb=Gnumeric.workbooks()[0]
&gt;&gt;&gt; wb
&lt;Workbook object at 0x862a490&gt;
&gt;&gt;&gt; dir(wb)
&gt;&gt;&gt; ['gui_add', 'sheet_add', 'sheets']

# Get a sheet
&gt;&gt;&gt; s=wb.sheets()[0]
&gt;&gt;&gt; s
&lt;Sheet object at 0x863e8d0&gt;
&gt;&gt;&gt; dir(s)
['cell_fetch', 'get_extent', 'get_name_unquoted', 'rename',
'style_apply_range', 'style_get', 'style_set_pos', 'style_set_range']

# Get a cell. s.cell_fetch(0,0) and s[0,0] are synonyms. First
# coordinate is columns, i.e. s[1,0] is B1.
&gt;&gt;&gt; c=s[0,0]
&gt;&gt;&gt; c
&lt;Cell object at 0x863d810&gt;
&gt;&gt;&gt; dir(c)
['get_entered_text', 'get_mstyle', 'get_rendered_text', 'get_value',
'get_value_as_string', 'set_text']

# Change the cell - it changes in the grid
&gt;&gt;&gt; c.set_text('foo')

# Retrieve the cell - both ways.
&gt;&gt;&gt; c.get_value()
foo
&gt;&gt;&gt; s.cell_fetch(0,0).get_value()
foo
</pre></div>
<p class="para block">Very, very nice.  Note, after setting a value, it won't show up
		until that cell is redrawn. That will happen automatically with plugin
		functions, but in the console, you may have to click on the cell.
	  </p>
</div>
</div></div>
<div class="navbar navbar-bottom"><table class="navbar"><tr>
<td class="navbar-prev"><a class="navbar-prev" href="sect-extending-python-install.shtml" title="Installing and Building Gnumeric for Python">Installing and Building Gnumeric for Python</a></td>
<td class="navbar-next"><a class="navbar-next" href="sect-extending-python-builtins.shtml" title="Using the built-in Python functions">Using the built-in Python functions</a></td>
</tr></table></div>
</body>
</html>
