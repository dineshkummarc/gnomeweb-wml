<page name="Development">

  <div class="table-of-contents">
    <p class="table-of-contents-heading">Contents</p>
      <ol>
        <li><a href="#design-goals">Anjuta design goals</a></li>
        <li><a href="#project-maintainers">Are you a library or project maintainer?</a></li>
        <li><a href="#anjuta-contributors">Getting Anjuta from git repository</a></li>
        <li><a href="#anjuta-todo">Things to do in Anjuta</a></li>
        <li><a href="#anjuta-website">Maintaining Anjuta website</a></li>
        <li><a href="#anjuta-history">History</a></li>
      </ol>
  </div>

  <p class="quote">
  &quot;A service to open source is a service to mankind.&quot;
  </p>

  <a name="#design-goals"></a>
  <h2>Anjuta design goals</h2>
  <p>
    <ul>
      <li>Simple and Usable user interface - simplicity over features.</li>
      <li>Integrate and promote free software development tools and methods.</li>
      <li>Scalability - plugins work under no assumption of project size.</li>
      <li>Extensibility - easy additions of new things.</li>
      <li>Flexibility - isolate functions into independent plugins.</li>
    </ul>
  </p>
  <a name="project-maintainers"></a>
  <h2>Are you a library or project maintainer?</h2>
  
  <p>Then you are looking to provide users of your library or project to use
    Anjuta for development. To do this Anjuta provides several
    means to make it easy.
  </p>
  <p>You can start by creating a template for your library. Follow this
    simple <a href="http://library.gnome.org/devel/libanjuta/stable/project-wizard-format.html">tutorial to create project templates</a>
    (no programming needed). You
    can either distribute the templates yourself or you can submit it to
    <a href="http://bugzilla.gnome.org/browse.cgi?product=anjuta">Anjuta bugzilla</a> for inclusion in our next release.
  </p>
  <p>Then if you need more advanced stuffs to use your project, you can
    create plugins to do them. Follow this nice
    <a href="http://library.gnome.org/devel/libanjuta/stable/writing-plugins.html">tutorial to create anjuta plugins</a>.
    Or you can pick up one of existing plugins and start adating it for
    your project. Plugins have to be distributed separately since they are
    quite specific to your project. You can see some good examples of how
    it is done in
    <a href="http://labs.o-hand.com/anjuta-poky-sdk-plugin/">Poky SDK plugin</a>,
    <a href="http://anjuta-maemo.garage.maemo.org/">Maemo plugin</a>,
    <a href="http://moblin.org/projects/moblin-anjuta-plug-in">Moblin plugin</a> etc.
  </p>
  
  <p>We are always listening if you need anything in Anjuta
    for plugins to work. So, feel free to ask for it in our
    <a href="anjuta-list@lists.sf.net">mailing list</a>.
  </p>
  
  <a name="anjuta-contributors"></a>
  <h2>Getting Anjuta from git repository</h2>
  <p>
    Anjuta is maintained in GNOME git server. Git is a very powerful
    distributed version control system. To learn more about git
    and how you can help anjuta development check
    <a href="http://live.gnome.org/Git">the GNOME git wiki</a>. You can also browse the source on <a href="http://git.gnome.org/browse/anjuta">git web</a> as well.
  </p>  
  <p>Make sure you have all
    <a href="downloads.html#anjuta-dependencies">dependencies of Anjuta</a>
    installed and ready. Now, grab the <code>anjuta</code> and
    <code>gdl</code> modules
    from the repository:</p>
  
  <div class="code">
    $ git clone git://git.gnome.org/anjuta
    $ git clone git://git.gnome.org/gdl
  </div>

  <p>That only gives read access to the repository. If you have an account
    for git.gnome.org and want write access (you must have been granted
    write access to the <code>anjuta</code> module as an Anjuta developer),
    you instead need to check out the source with:</p>
  
  <div class="code">
    $ git clone ssh://username@git.gnome.org/git/anjuta
    $ git clone ssh://username@git.gnome.org/git/gdl
  </div>
  
  <p>Now you will want to build and install.  Run:</p>
  
  <div class="code">
    $ ./autogen.sh
  </div>
  
  <p>If you want to enable Anjuta API documentation generation, you can pass --enable-gtk-doc to
    the above autogen.sh script. Then continue just like you would work with a tarball
    package:</p>
  
  <div class="code">
    $ ./configure
    $ make
    $ su [password]
    # make install
  </div>
  <p>At the end of configure stage, you will see which plugins are being built
    and which aren't. If you see some plugins not built, it's because you are
    missing some key dependencies to make it build.
  </p>
  <p>After you have checked the code out, you can use:</p>
  <div class="code">
    $ git pull --rebase (in the anjuta	top level directory)
  </div>
  <p>to update your personal copy of Anjuta to the latest version from the
    Git repository and rebuild.
  </p>
  <p> If you want to submit patches or commit to anjuta repository,
    see this nice and simple <a href="http://live.gnome.org/Git/Developers">git tutorial</a>
    for further instructions</p>
  
  <a name="anjuta-todo"/>
  <h2>Things to do in Anjuta</h2>
  <p>
      So, you got Anjuta from git and now want to contribute? There are always plenty of things to do in Anjuta. Check out <a href="http://live.gnome.org/Anjuta">our wiki</a> for new and fresh ideas. There are also plenty of interesting <a href="https://bugzilla.gnome.org/browse.cgi?product=anjuta">bugs to fix</a>.
  </p>
  <p>
     And there are always some cool tools available, be it little command-line tools, or a full blown applications, that are awaiting to be integrated in Anjuta. This is where you can help write new plugins. You can read more details on how to write plugins in <a href="http://library.gnome.org/devel/libanjuta/stable">API documentation</a>. Or you can contribute to existing anjuta related projects to further their development. Check out the <a href="http://projects.gnome.org/anjuta/projects.html">projects page</a> for list of such projects. Some of them really will appreciate your help.
  </p>
  <p>
    If you are good in writing, you can also help us expand and update our documentations. Users manual, faq and tutorials are all part of documentation available in anjuta source tree. Documentation is part of the source, so you need to get it from git in usual manner (see side pane for existing documentations).
  </p>
  <p>
    All anjuta devs hang out in <i>irc.gimp.net #anjuta</i> channel. Catch us for a little chat or if you have some questions to get answered. You can also join our development mailing list <a href="https://lists.sourceforge.net/lists/listinfo/anjuta-devel">anjuta-devel@lists.sf.net</a> if you want to participate in our discussions.
  </p>

  <a name="anjuta-website"/>
  <h2>Maintaining Anjuta website</h2>
  <p>
    Anjuta website (this website) is maintained in GNOME websites git repository. If you want to help update or fix errors in the site, you can easily just clone the git repository and submit patches in our bugzilla.
  </p>
  <p>
    Run the following commands to checkout and prepare gnomeweb-wml project for editing anjuta module.
  </p>
  <div class="code">
    $ git clone git://git.gnome.org/gnomeweb-wml
    $ cd gnomeweb-wml
    $ ./autogen.sh
    $ cd projects.gnome.org/anjuta
    $ make
  </div>
  <p>
    If you have gnome account, you can substitute above clone command with following one.
  </p>
  <div class="code">
    $ git clone ssh://username@git.gnome.org/gnomeweb-wml
  </div>
  <p>
    The website pages are create by xsl transformation in above anjuta directory. The actual layout is controlled by <i>layout.xsl</i> file in the directory and html files are generated from corresponding <i>.page</i> files. You would be editing the <i>.pages</i> files and run <i>make</i> as usual to update html files.
  </p>
  <p>To preview your copy of website, install apache2 and just symlink this directory from your WWW directory. Following commands usually should do.
  </p>

  <div class="code">
    $ sudo apt-get install apache2 (or equivalent for your distribution)
    $ sudo ln -s [path to above git anjuta dir] /var/www/anjuta
  </div>
  <p>
    You can then preview the site at url http://127.0.0.1/anjuta. Follow the <a href="http://live.gnome.org/Git/Developers">same procedure</a> mentioned above to pull, commit and push (or create patches and submit to bugzilla).
  </p>
  <a name="anjuta-history"/>
  <h2>History</h2>
  <p>Anjuta project was started in <b>27th Dec 1997</b>. To learn more about its history
    visit the first <a href="http://web.archive.org/web/20010924065759/anjuta.sourceforge.net/">archived anjuta website</a>
  </p>
</page>
