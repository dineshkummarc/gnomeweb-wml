<!-- -*- Mode: html; -*- -->

<page name="Projects">
  <h2>Anjuta related projects</h2>
  <ul class="projects">
    <li class="project-item">
      <ul class="project-item">
	<li class="project-status-active"></li>
	<li class="project-author">
	  Maxim Ermilov
	</li>
	<li class="project-name">
          <a href="http://code.google.com/p/anjuta-js-support/">Anjuta JavaScript support (GSoC 2009)</a>
	</li>
	<li class="project-description">
	  JavaScript support in Anjuta by implementing the missing parts, autocompletion, auto-indentation and js-debugger. It is implemented using a GObject-based JavaScript engine. Read the <a href="http://zaspire-in-it.blogspot.com/2009/08/gsoc-anjuta-javascript-integration.html">blog post</a> by Maxim to learn more about it. <i>Note: This project is part of Anjuta core now.</i>
	</li>
      </ul>
    </li>
    <li class="project-item">
      <ul class="project-item">
	<li class="project-status-active"></li>
	<li class="project-author">
	  Ishan Chattopadhyaya
 	</li>
	<li class="project-name">
          <a href="http://code.google.com/p/language-support-python/">Anjuta python support (GSoC 2009)</a>
	</li>
	<li class="project-description">
	  Pyhon support for Anjuta with templates, building of python projects, autoindent, autocompletion, Python debugging. Read the <a href="http://ishan.chattopadhyaya.com/blog/?p=3">blog post</a> from Ishan. Of course, check out <a href="http://www.youtube.com/watch?v=lHZdNJnq1jw">video</a> from him as well.
	</li>
      </ul>
    </li>
    <li class="project-item">
      <ul class="project-item">
	<li class="project-status-active"></li>
	<li class="project-author">
	  Sébastien Granjoux
	</li>
	<li class="project-name">
	  <a href="http://libanjutapython.sourceforge.net">Anjuta Python bindings </a>
	</li>
	<li class="project-description">
	  <p>
	    Python bindings for Anjuta. It includes a plugin allowing Anjuta
	    to load plugins written in Python and a Python debugger plugin
	    (using winpdb) written in Python. 
	  </p>
	</li>
      </ul>
    </li>
    <li class="project-item">
      <ul class="project-item">
	<li class="project-status-active"></li>
	<li class="project-author">
	  William Fagan
	</li>
	<li class="project-name">
          <a href="https://launchpad.net/anjuta-bazaar">Anjuta Bazaar plugin (GSoC 2008)</a>
	</li>
	<li class="project-description">
	  A plugin integrating Bazaar into Anjuta. Read the <a href="http://libwilliam.wordpress.com/2008/08/15/anjuta-bazaar-plugin-v020/">blog post</a> by William.
	</li>
      </ul>
    </li>
    <li class="project-item">
      <ul class="project-item">
	<li class="project-status-active"></li>
	<li class="project-author">
	  James Liggett
	</li>
	<li class="project-name">
          <a href="http://repo.or.cz/w/anjuta-git-plugin.git">Anjuta Git plugin (GSoC 2008)</a>
	</li>
	<li class="project-description">
	  A plugin integrating git into Anjuta. It's also tracked in bugzilla as <a href="https://bugzilla.gnome.org/show_bug.cgi?id=529270">bug 529270</a>. <i>Note: This project is now part of Anjuta core</i>
	</li>
      </ul>
    </li>
    <li class="project-item">
      <ul class="project-item">
	<li class="project-status-active"></li>
	<li class="project-author">
	  Abderrahim Kitouni
	</li>
	<li class="project-name">
	  <a href="http://bitbucket.org/abderrahim/anjuta-vala/wiki/Home">Anjuta Vala plugin (GSoC 2008)</a>
	</li>
	<li class="project-description">
	    This Anjuta plugin providing
	    <a href="http://live.gnome.org/Vala">vala</a>
	    bindings and adding
	    code completion and calltips (and hopefully more) for the
	    Vala programming language. It's
	    <a href="http://abderrahim.arablug.org/blog/">blogged here</a>
	    and there is a
	    <a href="http://abderrahim.arablug.org/blog/archives/2-Writing-Anjuta-plugins-in-Vala.html">nice tutorial</a>
	</li>
      </ul>
    </li>
    <li class="project-item">
      <ul class="project-item">
	<li class="project-status-inactive"></li>
	<li class="project-author">
	  Arun Chaganty
	</li>
	<li class="project-name">
          <a href="http://wiki.github.com/arunchaganty/vimjuta/">Anjuta vim plugin (GSoC 2008)</a>
	</li>
	<li class="project-description">
	  Vimjuta is a plugin for the Anjuta IDE (http://www.anjuta.org), which let’s you use GVim for the editor. The plugin embeds GVim using X11’s Socket interface, and thus gives you all the power of the normal GVim, with all the goodness of Anjuta. Read the <a href="http://arunchaganty.wordpress.com/2008/07/11/anjuta-gvim-preview/">blog post</a> by Arun for a preview.
	</li>
      </ul>
    </li>
    <li class="project-item">
      <ul class="project-item">
	<li class="project-status-active"></li>
	<li class="project-author">
	  Rob Bradford 
	</li>
	<li class="project-name">
	  <a href="http://labs.o-hand.com/anjuta-poky-sdk-plugin/">Poky SDK Plugin</a>
	</li>
	<li class="project-description">
	    Integrates Anjuta with the SDK toolchain built from the Poky
	    Platform Builder allowing a rapid cross-compiled, build,
	    deploy, test, debug cycle from within this easy to use
	    environment.
	</li>
      </ul>
    </li>
    <li class="project-item">
      <ul class="project-item">
	<li class="project-status-active"></li>
	<li class="project-author">
	  Florian Boor
	</li>
	<li class="project-name">
          <a href="http://labs.kernelconcepts.de/Tools/Anjuta-OE-SDK-Plugin/"> OpenEmbedded SDK Plugin</a>
	</li>
	<li class="project-description">
            This plugin enables the Anjuta IDE to make use of cross compilers easily. It supports standalone toolchains as well as OpenEmbedded working trees. Its heavily based on the Poky SDK Plugin and follows its release numbers.
	</li>
      </ul>
    </li>
    <li class="project-item">
      <ul class="project-item">
	<li class="project-status-inactive"></li>
	<li class="project-author">
	  Jukka-Pekka Iivonen
	</li>
	<li class="project-name">
          <a href="http://anjuta-maemo.garage.maemo.org/">Maemo SDK Plugin </a>
	</li>
	<li class="project-description">
	    Anjuta maemo SDK+ plugin provides Anjuta IDE development environment for maemo based Internet tablets. The plugin generates a working C code template that is easy to extend into a full application. Code can be build, new source files added, and Debian packages generated directly from Anjuta.
	</li>
      </ul>
    </li>

    <!-- template:
    <li class="project-item">
      <ul class="project-item">
	<li class="project-name">
	</li>
	<li class="project-description">
	  <p>
	  </p>
	</li>
      </ul>
    </li>
    -->
  </ul>
</page>
